---
import ColorfulTag from "@/components/ColorfulTag.vue"
const { post } = Astro.props
const data = post.data
const math = post.data.math
---
<html>
    <head><base target="_blank" /></head>
    <script type="text/javascript" id="MathJax-script" defer
        src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js">
    </script>
</html>
<div class="flex flex-col card-width card-style items-center py-16 mt-12 px-8" >
    <div class="flex flex-col items-start w-full max-w-[65ch]">
        <!-- tags -->
        <div class="flex flex-wrap">
            {data.tags.map((tag:string) => (
                <ColorfulTag tag={tag} />
            ))}
        </div>
        <!-- title -->
        <div class=" mt-4 text-2xl font-bold">
            {data.title}
        </div>
        <!-- words count and so on -->
        <div class=" mt-5 text-sm text-[--sub-font-color]">
            This is a Line of Words Count
        </div>
    </div>
    <!-- cover -->
    <div class=" my-8" style="max-width: 65ch">
        {data.image && (
            data.image.url.startsWith('src')
                ? <img src={'..\\'+data.image.url} alt={data.image?.alt} class=" object-cover rounded-2xl shadow-xl"/>
                : <img src={data.image.url} alt={data.image?.alt} class=" object-cover rounded-2xl shadow-xl"/>
        )}
    </div>
    <article class="prose dark:prose-invert w-full">
        <slot />
    </article>
</div>

<script lang="js" define:vars={{math}}>
    const renderLatex = () => {
        if (window.MathJax && math) {
            MathJax.typesetPromise().then(() => {
                // console.log('MathJax rendering complete');
            }).catch((err) => {
                console.error('MathJax rendering error:', err);
            });
        }
    }
    document.addEventListener('astro:page-load', renderLatex);
</script>


<style>
.prose {
    img{
        @apply rounded-2xl shadow-xl max-h-[600px] mx-auto my-0;
    }

    p{
        @apply text-justify;
    }

    p,h1,h2,h3,h4,h5,h6{
        code{
            padding: 4px;
            background-color: var(--inline-code-bg-color);
            color: var(--inline-code-text-color);
            border-radius: 4px;
            &::before, &::after{
                content: '';
            }
        }
    }

    hr{
        @apply my-8;
    }

    a{
        color: var(--primary);
        text-decoration: none;
        &:hover{
            text-decoration: underline;
        }
    }
}
</style>

